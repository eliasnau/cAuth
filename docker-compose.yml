version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-app
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-1234}
      DATABASE_URL: postgresql://${POSTGRES_USER:-root}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-app}
      REDIS_URL: redis://redis:6379
      JWT_ACCESS_TOKEN_SECRET: ${JWT_ACCESS_TOKEN_SECRET}
      JWT_REFRESH_TOKEN_SECRET: ${JWT_REFRESH_TOKEN_SECRET}
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM_EMAIL: noreply@dev.codity.net
      SMTP_FROM_NAME: Phantom
    ports:
      - "${PORT:-1234}:1234"
    volumes:
      - ./logs:/app/logs
    networks:
      - app-network
    labels:
      - "com.docker.compose.project=auth"

  postgres:
    image: postgres:15-alpine
    container_name: auth-postgres
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-root}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-app}
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-root} -d ${POSTGRES_DB:-app}",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.compose.project=auth"

  redis:
    image: redis:7-alpine
    container_name: auth-redis
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    command: redis-server --requirepass ${REDIS_PASSWORD:-password}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    labels:
      - "com.docker.compose.project=auth"

networks:
  app-network:
    name: auth-network
    driver: bridge

volumes:
  postgres-data:
    name: auth-postgres-data
  redis-data:
    name: auth-redis-data
